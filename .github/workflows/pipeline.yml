name: CI/CD Refugio Animales (EC2, build on server)

on:
  push:
    branches:
      - Pruebas

concurrency:
  group: cicd-refugio-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Descargar el código 
      - name: Checkout código
        uses: actions/checkout@v3

      # Aquí podrías agregar pasos de build local si quisieras validar algo
      - name: Mostrar archivos
        run: ls -lah

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Desplegar en EC2 (build + up)
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -euxo pipefail

            # Clonar si no existe
            if [ ! -d "/home/${{ secrets.SERVER_USER }}/refugio" ]; then
              git clone https://github.com/Zapoye18/RTAD_Proyecto_Final /home/${{ secrets.SERVER_USER }}/refugio
            fi
            cd /home/${{ secrets.SERVER_USER }}/refugio

            git fetch --all --prune

            # Eliminar TODO lo no versionado y reseteo duro de lo ya versionado en la rama actual
            git reset --hard
            git clean -xfd

            git fetch --all --prune
            git checkout -B Pruebas origin/Pruebas   # crea/repone la rama local igualita a la remota
            git reset --hard origin/Pruebas          # asegura HEAD/índice/working tree
            git clean -xfd

            # secretos en .env
            # cat > .env << 'EOF'
            # JWT_SECRET=${{ secrets.JWT_SECRET }}
            # DB_URI=${{ secrets.DB_URI }}
            # EOF

            cd RDAT 

            docker compose down || true
            sudo ss -ltnp | grep -E ':80|:8000|:3000' || true

            docker compose build --pull --no-cache
            docker compose up -d --force-recreate --remove-orphans

            #Build & Up
            docker compose ps
            docker logs refugio-backend --tail=100 || true
            docker logs refugio-frontend --tail=100 || true

            echo "Despliegue OK Definitivo"

