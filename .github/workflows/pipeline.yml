name: CI/CD Refugio Animales (Docker Hub + EC2)

on:
  pull_request:
    branches: [ Pruebas2.0 ]         
    paths:
      - 'RDAT/**'
      - '.github/workflows/**'
  push:
    branches: [ Pruebas2.0 ]         
    paths:
      - 'RDAT/**'
      - '.github/workflows/**'
  workflow_dispatch: 

concurrency:
  group: cicd-refugio-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Backend
      - uses: actions/setup-node@v4
        with: { node-version: 18, cache: 'npm', cache-dependency-path: RDAT/backend/package-lock.json }
      - name: Install backend
        working-directory: RDAT/backend
        run: npm install
      - name: Test backend
        working-directory: RDAT/backend
        run: npm test -- --coverage

      # Frontend
      - uses: actions/setup-node@v4
        with: { node-version: 18, cache: 'npm', cache-dependency-path: RDAT/frontend/package-lock.json }
      - name: Install frontend
        working-directory: RDAT/frontend
        run: npm install
      - name: Test frontend
        working-directory: RDAT/frontend
        run: npm test -- --coverage

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout del código
      - name: Checkout código
        uses: actions/checkout@v3

      # 2. Loguearse a Docker Hub
      - name: Login en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3. Construir y subir imagen Backend
      - name: Construir y push imagen Backend
        uses: docker/build-push-action@v4
        with:
          context: ./RDAT/backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/refugio-backend:latest

      # 4. Construir y subir imagen Frontend
      - name: Construir y push imagen Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./RDAT/frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/refugio-frontend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Desplegar en EC2 (pull + up)
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -euxo pipefail

            if [ ! -d "/home/${{ secrets.SERVER_USER }}/refugio" ]; then
              git clone https://github.com/Zapoye18/RTAD_Proyecto_Final /home/${{ secrets.SERVER_USER }}/refugio
            fi

            cd /home/${{ secrets.SERVER_USER }}/refugio/RDAT

            # Apagar contenedores viejos
            docker compose down || true

            # Descargar últimas imágenes desde Docker Hub
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/refugio-backend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/refugio-frontend:latest

            # Levantar con las nuevas imágenes
            docker compose up -d --force-recreate --remove-orphans

            docker compose ps
            docker logs refugio-backend --tail=50 || true
            docker logs refugio-frontend --tail=50 || true

            echo "Despliegue completado con Docker Hub"
